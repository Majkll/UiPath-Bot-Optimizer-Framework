<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetAvailableRobot" this:GetAvailableRobot.in_Orchestrator_BaseUrl="https://platform.uipath.com" this:GetAvailableRobot.in_Orchestrator_Name="UiPathPlatform" this:GetAvailableRobot.in_Tenant="RakeshMS" this:GetAvailableRobot.in_EnvironmentName="Test"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Robot" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="in_Orchestrator_BaseUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_Orchestrator_Name" Type="InArgument(x:String)" />
    <x:Property Name="in_Tenant" Type="InArgument(x:String)" />
    <x:Property Name="in_EnvironmentName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetAvailableRobot_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get Available Robot" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="json_Out" />
      <Variable x:TypeArguments="x:Int32" Name="http_StatusCode" />
      <Variable x:TypeArguments="x:String" Name="access_Token" />
      <Variable x:TypeArguments="x:String" Name="orchestrator_Credential_Asset" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="robotsList" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_69">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[out_Robot]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[robotsList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <Flowchart DisplayName="Main Flow" sap2010:WorkflowViewState.IdRef="Flowchart_6">
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_27">
          <Sequence DisplayName="Login to Orchestrator" sap2010:WorkflowViewState.IdRef="Sequence_138">
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Login to Orchestrator" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\Orchestrator_Login.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Tenant">[in_Tenant]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Orchestrator_Base_Url">[in_Orchestrator_BaseUrl]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_AccessToken">[access_Token]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorCredentialAssetName">["Orch_Cred_" + in_Orchestrator_Name + "_" + in_Tenant]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_28">
              <Sequence DisplayName="Get Idle Robots " sap2010:WorkflowViewState.IdRef="Sequence_139">
                <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" DisplayName="HTTP Request" EndPoint="[in_Orchestrator_BaseUrl + &quot;/odata/Sessions?$filter=State eq 'Available'&amp;$expand=Robot&amp;$select=Robot&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_22" Method="GET" Result="[json_Out]" StatusCode="[http_StatusCode]" TimeoutMS="6000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Headers>
                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[access_Token]</InArgument>
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
                <If Condition="[http_StatusCode =200 or http_StatusCode =201 or http_StatusCode =202]" DisplayName="If last api call succeeded" sap2010:WorkflowViewState.IdRef="If_51">
                  <If.Then>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_147">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="njl:JObject" Name="json_Obj_IdleRobots" />
                      </Sequence.Variables>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize json" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_22" JsonObject="[json_Obj_IdleRobots]" JsonString="[json_Out]" />
                      <If Condition="[json_Obj_IdleRobots(&quot;@odata.count&quot;).ToString &lt;&gt; &quot;0&quot;]" DisplayName="Check if bot is in available status" sap2010:WorkflowViewState.IdRef="If_50">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_146">
                            <ui:ForEach x:TypeArguments="njl:JObject" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[json_Obj_IdleRobots(&quot;value&quot;)]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="njl:JObject">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="njl:JObject" Name="item" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Extract Each Robot ID" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                    <InvokeMethod DisplayName="Add robot to idle robotlist" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="scg:List(x:String)">[robotsList]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="x:String">[item("Robot")("Id").ToString]</InArgument>
                                    </InvokeMethod>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_148">
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Error" Message="[&quot;Error while getting robots availability for Orchestrator: '&quot; + in_Orchestrator_Name + &quot;' Error: &quot; + json_Out]" />
                      <Throw Exception="[new Exception(&quot;Error while getting robots availability for Orchestrator: '&quot; + in_Orchestrator_Name + &quot;' Error: &quot; + json_Out)]" sap2010:WorkflowViewState.IdRef="Throw_13" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_29">
                  <Sequence DisplayName="Remove robots with pending jobs" sap2010:WorkflowViewState.IdRef="Sequence_140">
                    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" DisplayName="HTTP Request" EndPoint="[in_Orchestrator_BaseUrl + &quot;/odata/Jobs?$filter=State eq 'Pending'&amp;$select=Robot&amp;$expand=Robot&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_24" Method="GET" Result="[json_Out]" StatusCode="[http_StatusCode]" TimeoutMS="6000">
                      <ui:HttpClient.Attachments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Attachments>
                      <ui:HttpClient.Headers>
                        <InArgument x:TypeArguments="x:String" x:Key="Authorization">[access_Token]</InArgument>
                      </ui:HttpClient.Headers>
                      <ui:HttpClient.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Parameters>
                      <ui:HttpClient.UrlSegments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.UrlSegments>
                    </ui:HttpClient>
                    <Sequence DisplayName="Check for any pending jobs for each available robot" sap2010:WorkflowViewState.IdRef="Sequence_153">
                      <If Condition="[http_StatusCode =200 or http_StatusCode =201 or http_StatusCode =202]" DisplayName="If last api call succeeded" sap2010:WorkflowViewState.IdRef="If_53">
                        <If.Then>
                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_151">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="njl:JObject" Name="json_Obj_PendingJobs" />
                            </Sequence.Variables>
                            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize json" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_24" JsonObject="[json_Obj_PendingJobs]" JsonString="[json_Out]" />
                            <If Condition="[json_Obj_PendingJobs(&quot;@odata.count&quot;).ToString &lt;&gt; &quot;0&quot;]" DisplayName="Check if no pending jobs" sap2010:WorkflowViewState.IdRef="If_52">
                              <If.Then>
                                <ui:ForEach x:TypeArguments="njl:JObject" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_22" Values="[json_Obj_PendingJobs(&quot;value&quot;)]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="njl:JObject">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="njl:JObject" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Extract each pending Job and remove robots if present in idle list" sap2010:WorkflowViewState.IdRef="Sequence_150">
                                        <If Condition="[item(&quot;Robot&quot;).HasValues]" DisplayName="If robot present in idle robotlist remove it" sap2010:WorkflowViewState.IdRef="If_54">
                                          <If.Then>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_159">
                                              <If Condition="[robotsList.Contains(item(&quot;Robot&quot;)(&quot;Id&quot;).ToString)]" sap2010:WorkflowViewState.IdRef="If_55">
                                                <If.Then>
                                                  <InvokeMethod DisplayName="Remove Robot with Pending Job" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Remove">
                                                    <InvokeMethod.TargetObject>
                                                      <InArgument x:TypeArguments="scg:List(x:String)">[robotsList]</InArgument>
                                                    </InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="x:String">[item("Robot")("Id").ToString]</InArgument>
                                                  </InvokeMethod>
                                                </If.Then>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_152">
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Error" Message="[&quot;Error while getting pending jobs for robots for Orchestrator: '&quot; + in_Orchestrator_Name + &quot;' Error: &quot; + json_Out]" />
                            <Throw Exception="[new  Exception(&quot;Error while getting pending jobs for robots for Orchestrator: '&quot; + in_Orchestrator_Name + &quot;' Error: &quot; + json_Out)]" sap2010:WorkflowViewState.IdRef="Throw_14" />
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_30">
                      <Sequence DisplayName="Populate idle robots details" sap2010:WorkflowViewState.IdRef="Sequence_154">
                        <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_24" Values="[robotsList]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="robotId" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_155">
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="RobotList.Add(&quot;{&quot;&quot;RobotID&quot;&quot;:&quot;&quot;&quot; + Robot + &quot;&quot;&quot;,&quot;&quot;OrchestratorBaseUrl&quot;&quot;:&quot;&quot;&quot; + Orchestrator_BaseUrl + &quot;&quot;&quot;,&quot;&quot;OrchestratorName&quot;&quot;:&quot;&quot;&quot; + Orchestrator + &quot;&quot;&quot;,&quot;&quot;Tenant&quot;&quot;:&quot;&quot;&quot; + Tenant + &quot;&quot;&quot;,&quot;&quot;EnvironmentName&quot;&quot;:&quot;&quot;&quot; + EnvironmentName + &quot;&quot;&quot;}&quot;)" DisplayName="Invoke code" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                                  <ui:InvokeCode.Arguments>
                                    <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="RobotList">[out_Robot]</InOutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Robot">[robotId]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Orchestrator_BaseUrl">[in_Orchestrator_BaseUrl]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Tenant">[in_Tenant]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="EnvironmentName">[in_EnvironmentName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Orchestrator">[in_Orchestrator_Name]</InArgument>
                                  </ui:InvokeCode.Arguments>
                                </ui:InvokeCode>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart>
    <sads:DebugSymbol.Symbol>d2tDOlxVc2Vyc1xSUEFVc2VyXERvY3VtZW50c1xVaVBhdGhcQm90LU1hbmFnZXItRnJhbWV3b3JrLVNRTGl0ZVxCb3RNYW5hZ2VyXEZyYW1ld29ya1xHZXRBdmFpbGFibGVSb2JvdHMueGFtbFkB8gEB+wEBBQHAAQHPAQEEAXYBkgEBAwGnAgGsAgECUAOYAg4CAQFYBV8OAgF4YAVnDgIBdGgFlgIRAgECXTpdTwIBe1o7WkYCAXllOmVPAgF3YjtiRwIBdWsLdBYCAWh3D60BGgIBQbABE/ABHgIBFfMBF4kCIgIBA2wNcyUCAWl4EYUBIQIBXoYBEawBFgIBQrEBFb4BJQIBN78BFe8BIAIBFvQBGYgCJgIBBG5KblUCAXJwUXBfAgFwcWNxmgECAW1vWW9yAgFrbLoBbN0BAgFqeNIEeNgEAgFnfVJ9YAIBZXicBHioBAIBY3jdAnjXAwIBYXi0BHjHBAIBX4YBH4YBZwIBQ4gBFaQBIAIBTqcBFaoBIAIBR7EB0ASxAdYEAgFAtgFWtgFkAgE+sQGaBLEBpgQCATyxAeECsQHVAwIBOrEBsgSxAcUEAgE4wAEX7gEcAgEX9AGNAfQBmwECARP6AR+FAioCAQWMAReMAdwBAgFZjQEXowEcAgFPqAEXqAGOAgIBSqkBF6kB6gECAUjAASXAAW0CARjCARvmASYCASPpARvsASYCARz7ASGEAjECAQaMAc0BjAHZAQIBXIwBqgGMAcEBAgFajQEljQF2AgFQjwEboQEmAgFRqAGGAagBiwICAUupASipAbwBAgFJxgEdxgHjAQIBMscBHeUBIgIBJOoBHeoBmAICAR/rAR3rAfUBAgEd/QFr/QF2AgER/gFa/gFjAgEPgAJbgAJmAgEN/wFp/wGCAQIBC4ECZIECeAIBCYICYYICdwIBB5ABHaABKgIBUsYB1AHGAeABAgE1xgGwAcYByAECATPHASvHAX0CASXJASHjAS4CASbqAYwB6gGVAgIBIOsBLusBxwECAR6QAZQBkAG+AQIBWJYBI50BLgIBU8kBmAHJAcMBAgExzwEn4AEyAgEnlwElnAE0AgFU0AEp3wEuAgEomQFamQFmAgFWmwFOmwFsAgFV0AE30AFcAgEp0gEt3QE4AgEq0wEv3AE0AgEr0wE90wGGAQIBLNUBM9oBQgIBLdcBaNcBdAIBL9kBXNkBegIBLg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="724,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="724,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_138" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_22" sap:VirtualizedContainerService.HintSize="847,22" />
      <sap2010:ViewStateData Id="DeserializeJson`1_22" sap:VirtualizedContainerService.HintSize="464,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Sequence_141" sap:VirtualizedContainerService.HintSize="240,256">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_20" sap:VirtualizedContainerService.HintSize="287,390" />
      <sap2010:ViewStateData Id="Sequence_146" sap:VirtualizedContainerService.HintSize="309,514">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_50" sap:VirtualizedContainerService.HintSize="464,662" />
      <sap2010:ViewStateData Id="Sequence_147" sap:VirtualizedContainerService.HintSize="486,886">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_13" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_148" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_51" sap:VirtualizedContainerService.HintSize="847,1034">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_139" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_24" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="DeserializeJson`1_24" sap:VirtualizedContainerService.HintSize="774,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="If_55" sap:VirtualizedContainerService.HintSize="464,280" />
      <sap2010:ViewStateData Id="Sequence_159" sap:VirtualizedContainerService.HintSize="486,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_54" sap:VirtualizedContainerService.HintSize="611,552" />
      <sap2010:ViewStateData Id="Sequence_150" sap:VirtualizedContainerService.HintSize="633,676">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_22" sap:VirtualizedContainerService.HintSize="649,810" />
      <sap2010:ViewStateData Id="If_52" sap:VirtualizedContainerService.HintSize="774,958" />
      <sap2010:ViewStateData Id="Sequence_151" sap:VirtualizedContainerService.HintSize="796,1182">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_14" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_152" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_53" sap:VirtualizedContainerService.HintSize="1157,1330" />
      <sap2010:ViewStateData Id="Sequence_153" sap:VirtualizedContainerService.HintSize="1179,1454">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_140" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_5" sap:VirtualizedContainerService.HintSize="314,164" />
      <sap2010:ViewStateData Id="Sequence_155" sap:VirtualizedContainerService.HintSize="336,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_24" sap:VirtualizedContainerService.HintSize="352,422" />
      <sap2010:ViewStateData Id="Sequence_154" sap:VirtualizedContainerService.HintSize="374,546">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,354.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,274.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">400,325.5 400,354.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,204.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">400,255.5 400,274.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">400,175.5 400,204.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_6" sap:VirtualizedContainerService.HintSize="724,889">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">370,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">710</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">400,77.5 400,124.5</av:PointCollection>
            <x:Double x:Key="Height">852.80000000000018</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="746,1213">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetAvailableRobot_1" sap:VirtualizedContainerService.HintSize="786,1293">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>