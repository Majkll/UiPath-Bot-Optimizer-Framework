<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Process_Robots_Mapping" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_Orchestrator_Mapping" Type="InArgument(sd:DataTable)" />
    <x:Property Name="out_Transaction_Deferred" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_out_Process_LastPostponeTime" Type="InOutArgument(scg:Dictionary(x:String, s:DateTime))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Threading</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: This workflow process the transaction item from the Master Bot Queue. Each queue item corresponts to single transaction for a specific process&#xA;&#xA;Following steps are peformed by this workflow&#xA;&#xA;1. Get the available Bot for the corresponding process&#xA;2. If there is a process spcific queue, then create the corresponding queue from Master Queue data&#xA;3. Get the Release ID for the process&#xA;4. Start the Job for the available Robot obtained in step 1" DisplayName="ProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="available_Robot" />
      <Variable x:TypeArguments="njl:JObject" Name="JsonObj" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="QueueItemData" />
      <Variable x:TypeArguments="x:String" Name="jsontext" />
      <Variable x:TypeArguments="x:String" Name="access_Token" />
      <Variable x:TypeArguments="x:String" Name="http_response" />
      <Variable x:TypeArguments="x:Int32" Name="http_status" />
      <Variable x:TypeArguments="x:String" Name="releaseID" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="queueItemCreated" />
      <Variable x:TypeArguments="x:String" Name="processSpecific_TransactionID">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="pendingTransaction_Process" />
    </Sequence.Variables>
    <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Flowchart DisplayName="Main Flow" sap2010:WorkflowViewState.IdRef="Flowchart_1">
          <Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_7">
              <Sequence DisplayName="Initialize" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_Transaction_Deferred]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[IsNothing( in_TransactionItem.SpecificContent(&quot;ProcessName&quot;))]" DisplayName="Check if 'ProcessName' element present in Master Queue Item" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="'ProcessName' is not available in the Master Queue Item. Aborting the transaction" />
                      <Throw Exception="[new BusinessRuleException(&quot;'ProcessName' is not available in the Master Queue Item&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Processing Transaction for Process: '&quot; + in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString + &quot;'&quot;]" />
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                  <Sequence DisplayName="Check if the process postponed before" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[pendingTransaction_Process]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_2" Method="GET" RelativeEndpoint="[&quot;/odata/QueueItems(&quot; +in_TransactionItem.Id.ToString + &quot;)&quot;]" Result="[jsontext]" StatusCode="[http_status]" />
                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize json" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[JsonObj]" JsonString="[jsontext]" />
                    <If Condition="[in_out_Process_LastPostponeTime.ContainsKey(in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString)]" sap2010:WorkflowViewState.IdRef="If_11">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="ui:GenericValue" Name="temp" />
                          </Sequence.Variables>
                          <If Condition="[in_out_Process_LastPostponeTime(in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString).AddMinutes(Double.Parse(in_Config(&quot;Retry_Delay&quot;).ToString)) &gt; DateAndTime.Now and JsonObj(&quot;DeferDate&quot;).ToString=&quot;&quot;]" DisplayName="If already a transaction is postponed for this process " sap2010:WorkflowViewState.IdRef="If_12">
                            <If.Then>
                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[pendingTransaction_Process]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID7" Condition="[pendingTransaction_Process]" DisplayName="Is there any Pending Transaction" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                          <Sequence sap2010:Annotation.AnnotationText="Defer the transacton to a future time as per predefined settings 'Retry_Delay' if any of the following conditions &#xA;&#xA;If already a transaction is pending to process for this process&#xA;or &#xA;If there are no bots available to process this transaction &#xA;" DisplayName="Defer the transaction" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="postponedTime" />
                            </Sequence.Variables>
                            <If Condition="[pendingTransaction_Process]" sap2010:WorkflowViewState.IdRef="If_13">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[postponedTime]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[in_out_Process_LastPostponeTime(in_TransactionItem.SpecificContent("ProcessName").ToString).AddSeconds(Double.Parse(in_Config("Retry_Delay").ToString))]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[in_out_Process_LastPostponeTime(in_TransactionItem.SpecificContent("ProcessName").ToString)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[postponedTime]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[postponedTime]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[DateTime.Now.AddSeconds(Double.Parse(in_Config("Retry_Delay").ToString))]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[in_out_Process_LastPostponeTime.ContainsKey(in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString)]" sap2010:WorkflowViewState.IdRef="If_16">
                                    <If.Then>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_32">
                                        <If Condition="[postponedTime &gt; in_out_Process_LastPostponeTime(in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString)]" sap2010:WorkflowViewState.IdRef="If_17">
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:DateTime">[in_out_Process_LastPostponeTime(in_TransactionItem.SpecificContent("ProcessName").ToString)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:DateTime">[postponedTime]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:DateTime">[in_out_Process_LastPostponeTime(in_TransactionItem.SpecificContent("ProcessName").ToString)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:DateTime">[postponedTime]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="[postponedTime]" DisplayName="Postpone transaction item" DueDate="[in_TransactionItem.StartTransactionTime.Value.AddHours(24)]" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_1" TransactionItem="[in_TransactionItem]" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[out_Transaction_Deferred]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;No Robots Available.Transaction Deferred for process: &quot; + in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString]" />
                          </Sequence>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get next available Robot" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\GetAvailableRobot.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[in_TransactionItem.SpecificContent("ProcessName").ToString]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Process_Robot_Mapping">[in_Process_Robots_Mapping]</InArgument>
                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Robot">[available_Robot]</OutArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Orchestrator_Mapping">[in_Orchestrator_Mapping]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID1" Condition="[IsNothing(available_Robot)]" DisplayName="Is Bot Available" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}">
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                                  <Sequence DisplayName="Process Queue Item" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                    <If Condition="[IsNothing(in_TransactionItem.SpecificContent(&quot;QueueName&quot;))]" DisplayName="If the process require a process specific queue then copy queue data from master queue to process specific queue" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Then>
                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;No Process specific queue for process: '&quot; + in_TransactionItem.SpecificContent(&quot;ProcessName&quot;).ToString + &quot;'. Skipping process specific queue creation&quot;]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow Create Queue Item" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CreateProcess_Specific_Queue.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[available_Robot("Orch_BaseUrl").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[available_Robot("AccessToken").ToString]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[processSpecific_TransactionID]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <If Condition="[processSpecific_TransactionID&lt;&gt;&quot;&quot;]" DisplayName="Check if queueitem is created" sap2010:WorkflowViewState.IdRef="If_9">
                                            <If.Then>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[queueItemCreated]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                          </If>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                                      <Sequence DisplayName="Get ReleaseID" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow - Get ReleaseID" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\GetReleaseID.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[available_Robot("Orch_BaseUrl").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[available_Robot("AccessToken").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[in_TransactionItem.SpecificContent("ProcessName").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_EnvironmentName">[available_Robot("EnvironmentName").ToString]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_ReleaseID">[releaseID]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                                          <Sequence DisplayName="Create Job" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow-Create Job" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\CreateJob.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[available_Robot("Orch_BaseUrl").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[available_Robot("AccessToken").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_ReleaseKey">[releaseID]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_RobotID">[available_Robot("RobotID").ToString]</InArgument>
                                                <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_JobKey" />
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </Flowchart.StartNode>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
          <x:Reference>__ReferenceID7</x:Reference>
          <x:Reference>__ReferenceID8</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
              <If Condition="[queueItemCreated]" DisplayName="Queue Item is already created then delete it since the transaction is failed" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\DeleteQueueItem.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[available_Robot("Orch_BaseUrl").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[available_Robot("AccessToken").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_QueueItemID">[processSpecific_TransactionID]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
              </If>
              <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>dzlDOlxVc2Vyc1xSUEFVc2VyXERvY3VtZW50c1xVaVBhdGhcRGlzcGF0Y2hlclxQcm9jZXNzLnhhbWx9VQP2Ag4CAQFfNV88AgEEYgtiOgIBA2U1ZTwCAQJnBfQCEAIBBWkJ2wIVAgET4wIN8AIYAgEGbA9+GgMBmAGBAROjAR4CAX6lAUWlAWMCAXz5ARuBAjMCAXGDAk2DAmsCAXCGAiOmAi4CAVipAiezAjICAUy2AivBAjYCAT+oARv0ASYCARTkAg/uAhQCAQjvAg/vAkYCAQdtEXQaAwGiAXURfRYDAZkBggEViQEeAwGUAYoBFYoB4wIDAY4BiwEViwHNAQMBiQGMARWiARoCAX/+AWr+AYMBAgF6/AFr/AGGAQIBePsBXfsBmQECAXf9AXP9AYQBAgF1/wFy/wF9AgFz+QHLAfkB7QECAXKHAiWlAioCAVmqAimyAkECAU23Ai3AAkUCAUCsAR3pASICASHqAR3qAdkCAgEb6wEd8gEmAgEX8wEd8wGaAgIBFeQCHeQCMQIBCeYCE+wCKwIBC3I9ckIDAaUBbz5vWAMBowF1H3VqAwGaAXcVeyADAZsBhwFBhwFGAwGXAYQBQoQBXgMBlQGKAbkCigHFAgMBkgGKAd8BigGxAgMBkQGKAdECigHgAgMBjwGLAb4BiwHKAQMBjAGLAacBiwGyAQMBigGMASOMAZgBAwGAAY4BGaABJAMBgQGHAjOHAnsCAVqJAimLAjQCAW2OAimjAjQCAVuwAmuwAnYCAVatAmutApQBAgFUrgJrrgKnAQIBU68Cb68CnAECAVGqAuABqgL9AQIBUKwCbKwClgECAU68Amu8ApABAgFKugJvugKYAQIBSLsCbrsCeQIBRr0Cd70CiwECAUS3At8BtwL5AQIBQ7kCcLkCmgECAUGsASusAUkCASKuASG/ASwCATbCASHnASwCASTqAbUB6gHzAQIBIOoBc+oBhAECAR7qAcAC6gHWAgIBHPABSfABTQIBGu0BSu0BZAIBGPMBigHzAZcCAgEW6gJV6gJ0AgER6QJV6QJ+AgEP5gK/AeYC3wECAQ7oAlboAoABAgEMeBd42gEDAaABeRd5twEDAZ4Behd6kwIDAZwBkgEbnwEgAwGCAYoCK4oC1AICAW6PAiuWAkMCAWOXAiuiAjACAVyvASO2ASwCATu3ASO+ASwCATfDASPKASwCATLLASPmASgCASV4hAF41wEDAaEBeSh5igEDAZ8BeoQBepACAwGdAZIBKZIBpgIDAYMBlAEfnQEqAwGEAYoCmAGKAtECAgFvlAJxlAKQAQIBa5MCbZMClgECAWmRAnWRAokBAgFnjwLkAY8CkQICAWaSAm6SApgBAgFklwI5lwJuAgFdmQIvoAI4AgFftAFQtAHpAQIBPrEBUbEBYAIBPLwBULwBXwIBObkBUbkBrgECATjIAVDIAZoBAgE1xQFRxQFgAgEzywExywGmAQIBJs0BJ9oBMgIBK90BJ+QBMAIBJ5UBIZwBKgMBhQGeAlueAl8CAWKbAlybAm4CAWDOASnZAS4CASziAVTiAWMCASnfAVXfAbIBAgEomgFNmgFRAwGIAZcBTpcBagMBhgHOATfOAbMBAgEt0AEt1wE2AgEu1QFa1QFpAgEw0gFb0gG4AQIBLw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="464,60.8" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="313.6,92.8" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="313.6,22.4" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="313.6,92.8" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="336,412.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,563.2" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="611.2,60.8" />
      <sap2010:ViewStateData Id="OrchestratorHttpRequest_2" sap:VirtualizedContainerService.HintSize="611.2,22.4" />
      <sap2010:ViewStateData Id="DeserializeJson`1_1" sap:VirtualizedContainerService.HintSize="611.2,60.8" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="265.6,185.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,336" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="486.4,460.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="611.2,611.2" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="486,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="753,480" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="775,704">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="1064,852" />
      <sap2010:ViewStateData Id="PostponeTransactionItem_1" sap:VirtualizedContainerService.HintSize="1064,22" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="1064,60" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,243">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">150,921.6</av:Point>
            <av:Size x:Key="ShapeSize">200,243</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="313.6,92.8" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,217.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="464,88" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,211.2" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="486.4,464">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="846.4,614.4" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">550,874.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">550,784.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">650,835.5 650,874.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">550,694.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">650,745.5 650,784.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="86,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">397,566.5</av:Point>
            <av:Size x:Key="ShapeSize">86,87</av:Size>
            <x:String x:Key="TrueLabel">No Bots Available</x:String>
            <x:String x:Key="FalseLabel">Bot Available</x:String>
            <av:PointCollection x:Key="FalseConnector">483,610 650,610 650,694.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">397,610 250,610 250,921.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">340,443.6</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">440,494.6 440,524.6 441,524.6 441,566.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="160,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">230,276.4</av:Point>
            <av:Size x:Key="ShapeSize">160,87</av:Size>
            <x:String x:Key="TrueLabel">ProcessDeferred</x:String>
            <x:String x:Key="FalseLabel">ProcessNotDeferred</x:String>
            <av:PointCollection x:Key="FalseConnector">390,320 440,320 440,443.6</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">230,319.9 120,319.9 120,1043.1 150,1043.1</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,183.6</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,234.6 310,276.4</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,104.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,155.5 310,183.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="764,1314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">280,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,77.5 310,104.5</av:PointCollection>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="Width">750</x:Double>
            <x:Double x:Key="Height">1278.4</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="486,421">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="768,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="782,1541" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="804,1812">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="844,1892" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>