<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:s1="clr-namespace:SQLite;assembly=SQLiteActivities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sds="clr-namespace:System.Data.SQLite;assembly=System.Data.SQLite"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_Robots_Mapping" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_TransactionNumber" Type="InOutArgument(x:Int32)" />
    <x:Property Name="in_SQLite_Connection" Type="InArgument(sds:SQLiteConnection)" />
    <x:Property Name="io_AccessTokenCache" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Threading</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Data.SQLite</x:String>
      <x:String>System.Data.Common</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SQLite</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: This workflow distributes the master queue items to idle robots in FIFO order. &#xA;Each queue item corresponts to single transaction for a specific process&#xA;&#xA;Following steps are peformed by this workflow&#xA;&#xA;1. Get the idle robots&#xA;2. Assign master queue items to idle robots in FIFO order&#xA;       2.1. If there is a process specific queue item, then create the corresponding queue from master queue data&#xA;       2.2. Get the Release ID for the process&#xA;       2.3. Start Job for each of idle robots obtained in step 1 based on availalbe master queue items in FIFO order&#xD;&#xA;&#xD;&#xA;Inputs:- &#xD;&#xA;  Config Collection&#xD;&#xA;  SQLite Connection&#xD;&#xA;  Process Name&#xD;&#xA;  Robots Mapping Table&#xD;&#xA;  Orchestrator AccessToken Cache" DisplayName="ProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="QueueItemData" />
      <Variable x:TypeArguments="x:String" Name="jsontext" />
      <Variable x:TypeArguments="x:String" Name="access_Token" />
      <Variable x:TypeArguments="x:String" Name="http_response" />
      <Variable x:TypeArguments="x:Int32" Name="http_status" />
      <Variable x:TypeArguments="x:String" Name="releaseID" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="queueItemCreated" />
      <Variable x:TypeArguments="x:String" Name="processSpecific_TransactionID">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="pendingTransaction_Process" />
    </Sequence.Variables>
    <Flowchart DisplayName="Main Flow" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <Flowchart.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="availableRobots" />
        <Variable x:TypeArguments="ui:QueueItem" Name="currentTransaction" />
        <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
        <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_12">
          <Sequence DisplayName="Get Available Robots" sap2010:WorkflowViewState.IdRef="Sequence_37">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataRow[]" Name="datarow" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[availableRobots]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
              </Assign.Value>
            </Assign>
            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_3">
              <TryCatch.Try>
                <Sequence DisplayName="Try Sequence" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="robotMappingByOrchTenant" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[robotMappingByOrchTenant]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[in_Robots_Mapping.DefaultView.ToTable(true,{"ProcessName","OrchestratorName","OrchestratorBaseUrl","Tenant"})]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Select Robots mapping for a process" sap2010:WorkflowViewState.IdRef="Assign_20">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow[]">[datarow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow[]">[robotMappingByOrchTenant.Select("ProcessName='" + in_ProcessName + "'")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each - Orchestrator and Tenant" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[datarow]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:List(x:String)" Name="tempRobotList" />
                          </Sequence.Variables>
                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Getting robot availability for Orchestrator : '&quot; + row(&quot;OrchestratorName&quot;).ToString + &quot;', Tenant: '&quot; + row(&quot;Tenant&quot;).ToString + &quot;'&quot;]" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\GetAvailableRobots.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_Robot">[tempRobotList]</OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Orchestrator_BaseUrl">[row("OrchestratorBaseUrl").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Orchestrator_Name">[row("OrchestratorName").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Tenant">[row("Tenant").ToString]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Robots_Mapping">[in_Robots_Mapping]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_AccessTokenExpiry">[Int32.Parse(in_Config("AccessTokenExpiry").ToString)]</InArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_AccessTokenCache">[io_AccessTokenCache]</InOutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="AddRange">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="scg:List(x:String)">[availableRobots]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="scg:List(x:String)">[tempRobotList]</InArgument>
                          </InvokeMethod>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Error while getting robots availability for process : '&quot; + in_ProcessName + &quot;' Error: '&quot; + exception.Message + &quot;' at Source: '&quot; + exception.Source + &quot;'&quot;]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_13">
              <Sequence DisplayName="Work Assignment to Robots" sap2010:WorkflowViewState.IdRef="Sequence_40">
                <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[availableRobots]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="bot" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_41">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="njl:JObject" Name="jsonOut_CurrentIdleBot" />
                          <Variable x:TypeArguments="sd:DataTable" Name="outputDataTableTransaction" />
                        </Sequence.Variables>
                        <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                          <TryCatch.Try>
                            <Flowchart DisplayName="Assign transaction to available robots" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                              <Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                                  <Sequence DisplayName="Find next transaction for this bot" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize json" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[jsonOut_CurrentIdleBot]" JsonString="[bot]" />
                                    <s1:ExecuteQuery DatabaseFullPath="{x:Null}" Connection="[in_SQLite_Connection]" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" QueryResult="[outputDataTableTransaction]" SQLCommand="[&quot;SELECT * FROM &quot; + in_Config(&quot;LocalQueueTable&quot;).ToString + &quot; WHERE ProcessName IN (SELECT ProcessName FROM &quot; + in_Config(&quot;LocalBotsTable&quot;).ToString + &quot; WHERE RobotID ='&quot; + jsonOut_CurrentIdleBot(&quot;RobotID&quot;).ToString + &quot;' AND OrchestratorName='&quot; + jsonOut_CurrentIdleBot(&quot;OrchestratorName&quot;).ToString + &quot;' AND Tenant='&quot; + jsonOut_CurrentIdleBot(&quot;Tenant&quot;).ToString + &quot;') ORDER BY rowid ASC LIMIT 1;&quot;]" />
                                  </Sequence>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID5" Condition="[outputDataTableTransaction.Rows.Count &gt; 0]" DisplayName="Is transaction available?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                                      <FlowDecision.True>
                                        <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                                          <TryCatch DisplayName="Get Queue Item" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Get Queue Item" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="ui:QueueItem" Name="queueItem" />
                                                  <Variable x:TypeArguments="sd:DataRow" Name="dbQueueItemRow" />
                                                </Sequence.Variables>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="sd:DataRow">[dbQueueItemRow]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="sd:DataRow">[outputDataTableTransaction.Rows(0)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[jsontext]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[outputDataTableTransaction.Rows(0)("QueueItem").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:DeserializeJson x:TypeArguments="ui:QueueItem" DisplayName="Deserialize json" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7" JsonObject="[currentTransaction]" JsonString="[jsontext]" />
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Catch Exception" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Error" Message="[&quot;Unable to deserialize transaction item. TranID:'&quot; + outputDataTableTransaction.Rows(0)(&quot;TransactionID&quot;).ToString  + &quot;' Error: '&quot;  + exception.Message + &quot;', at source: '&quot; + exception.Source + &quot;'&quot;]" />
                                                    <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <FlowStep.Next>
                                            <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                                              <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                                <TryCatch.Try>
                                                  <Flowchart DisplayName="Assign the transaction to the current bot" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                                                    <Flowchart.StartNode>
                                                      <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                                                        <Sequence DisplayName="Initialize" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Processing the transaction: &quot; + io_TransactionNumber.ToString]" />
                                                          <ui:SetTransactionProgress TimeoutMS="{x:Null}" DisplayName="Set transaction progress" sap2010:WorkflowViewState.IdRef="SetTransactionProgress_4" Progress="[&quot;Assigning to Robot: &quot; + jsonOut_CurrentIdleBot(&quot;RobotID&quot;).ToString]" TransactionItem="[currentTransaction]" />
                                                        </Sequence>
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                                                            <Sequence DisplayName="Get ReleaseID" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="x:String" Name="orchestrator_Credential_Asset" />
                                                                <Variable x:TypeArguments="sd:DataRow[]" Name="currentRobotDataRow" />
                                                              </Sequence.Variables>
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[orchestrator_Credential_Asset]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["Orch_Cred" + "_" + jsonOut_CurrentIdleBot("OrchestratorName").ToString + "_" + jsonOut_CurrentIdleBot("Tenant").ToString]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Select Robots mapping for a process" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="sd:DataRow[]">[currentRobotDataRow]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="sd:DataRow[]">[in_Robots_Mapping.Select("ProcessName='" + currentTransaction.SpecificContent("ProcessName").ToString + "' AND RobotID='" + jsonOut_CurrentIdleBot("RobotID").ToString + "' AND OrchestratorName='" + jsonOut_CurrentIdleBot("OrchestratorName").ToString + "' AND Tenant='" + jsonOut_CurrentIdleBot("Tenant").ToString + "'")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\Orchestrator_Login.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_Tenant">[jsonOut_CurrentIdleBot("Tenant").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_Orchestrator_Base_Url">[jsonOut_CurrentIdleBot("OrchestratorBaseUrl").ToString]</InArgument>
                                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_AccessToken">[access_Token]</OutArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorCredentialAssetName">[orchestrator_Credential_Asset]</InArgument>
                                                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_AccessTokenCache">[io_AccessTokenCache]</InOutArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_AccessTokenExpiry">[Int32.Parse(in_Config("AccessTokenExpiry").ToString)]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_HttpTimeoutMS">[Int32.Parse(in_Config("HttpTimeoutMS").ToString)]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow - Get ReleaseID" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework\GetReleaseID.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[jsonOut_CurrentIdleBot("OrchestratorBaseUrl").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[access_Token]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[currentTransaction.SpecificContent("ProcessName").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_EnvironmentName">[currentRobotDataRow(0)("EnvironmentName").ToString]</InArgument>
                                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_ReleaseID">[releaseID]</OutArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_HttpTimeoutMS">[Int32.Parse(in_Config("HttpTimeoutMS").ToString)]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                            </Sequence>
                                                            <FlowStep.Next>
                                                              <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                                                <Sequence DisplayName="Create Process Queue" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                                  <If Condition="[currentTransaction.SpecificContent.ContainsKey(&quot;QueueName&quot;)]" DisplayName="If the process has a process specific queue then copy queue to process specific queue" sap2010:WorkflowViewState.IdRef="If_24">
                                                                    <If.Then>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow Create Queue Item" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\CreateProcess_Specific_Queue.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[currentTransaction]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[jsonOut_CurrentIdleBot("OrchestratorBaseUrl").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[access_Token]</InArgument>
                                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[processSpecific_TransactionID]</OutArgument>
                                                                            <InArgument x:TypeArguments="x:Int32" x:Key="in_HttpTimeoutMS">[Int32.Parse(in_Config("HttpTimeoutMS").ToString)]</InArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                        </ui:InvokeWorkflowFile>
                                                                        <If Condition="[processSpecific_TransactionID&lt;&gt;&quot;&quot;]" DisplayName="Check if queueitem is created" sap2010:WorkflowViewState.IdRef="If_23">
                                                                          <If.Then>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Boolean">[queueItemCreated]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </If.Then>
                                                                        </If>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;No Process specific queue for process: '&quot; + currentTransaction.SpecificContent(&quot;ProcessName&quot;).ToString + &quot;'. Skipping process specific queue creation&quot;]" />
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                </Sequence>
                                                                <FlowStep.Next>
                                                                  <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                                                    <Sequence DisplayName="Create Job" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="jobKey" />
                                                                      </Sequence.Variables>
                                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow-Create Job" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\CreateJob.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[jsonOut_CurrentIdleBot("OrchestratorBaseUrl").ToString]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[access_Token]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="in_ReleaseKey">[releaseID]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="in_RobotID">[jsonOut_CurrentIdleBot("RobotID").ToString]</InArgument>
                                                                          <OutArgument x:TypeArguments="x:String" x:Key="out_JobKey">[jobKey]</OutArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[currentTransaction.SpecificContent("ProcessName").ToString]</InArgument>
                                                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_HttpTimeoutMS">[Int32.Parse(in_Config("HttpTimeoutMS").ToString)]</InArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Transaction assigned to robot: &quot; + jsonOut_CurrentIdleBot.ToString + &quot;. Master TranID: '&quot; + currentTransaction.ItemKey.ToString + &quot;', Target Job: '&quot; + jobKey + &quot;'&quot;]" />
                                                                    </Sequence>
                                                                  </FlowStep>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </Flowchart.StartNode>
                                                    <x:Reference>__ReferenceID0</x:Reference>
                                                    <x:Reference>__ReferenceID1</x:Reference>
                                                    <x:Reference>__ReferenceID2</x:Reference>
                                                    <x:Reference>__ReferenceID3</x:Reference>
                                                  </Flowchart>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                    <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </ActivityAction>
                                                  </Catch>
                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <If Condition="[queueItemCreated]" DisplayName="Queue Item is already created then delete it since the transaction is failed" sap2010:WorkflowViewState.IdRef="If_25">
                                                          <If.Then>
                                                            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                                              <TryCatch.Try>
                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\DeleteQueueItem.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_Orch_BaseUrl">[jsonOut_CurrentIdleBot("OrchestratorBaseUrl").ToString]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_AccessToken">[access_Token]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_QueueItemID">[processSpecific_TransactionID]</InArgument>
                                                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_HttpTimeoutMS">[Int32.Parse(in_Config("HttpTimeoutMS").ToString)]</InArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                              </TryCatch.Try>
                                                              <TryCatch.Catches>
                                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Fatal" Message="[&quot;Error while deleting the process specific queue item for process:  '&quot; + currentTransaction.SpecificContent(&quot;ProcessName&quot;).ToString + &quot;' Error: '&quot; + exception.Message + &quot;'&quot;]" />
                                                                  </ActivityAction>
                                                                </Catch>
                                                              </TryCatch.Catches>
                                                            </TryCatch>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                                <TryCatch.Finally>
                                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                    <TryCatch.Try>
                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                          <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                                          <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[currentTransaction]</InArgument>
                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[io_TransactionNumber]</InOutArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[currentTransaction.ItemKey.ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[currentTransaction.SpecificContent("ProcessName").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="sds:SQLiteConnection" x:Key="in_SQLiteConnection">[in_SQLite_Connection]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Fatal" Message="[&quot;Error while updating the master queue item for process :  '&quot; + currentTransaction.SpecificContent(&quot;ProcessName&quot;).ToString + &quot;' Error: '&quot; + exception.Message + &quot;'&quot;]" />
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                </TryCatch.Finally>
                                              </TryCatch>
                                            </FlowStep>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.True>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                              </Flowchart.StartNode>
                              <x:Reference>__ReferenceID4</x:Reference>
                              <x:Reference>__ReferenceID5</x:Reference>
                              <x:Reference>__ReferenceID6</x:Reference>
                              <x:Reference>__ReferenceID7</x:Reference>
                            </Flowchart>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[&quot;Error while assigning transaction to robot:  '&quot; + bot + &quot;' Error: '&quot; + exception.Message + &quot;', at source: '&quot; + exception.Source + &quot;'&quot;]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
    </Flowchart>
    <sads:DebugSymbol.Symbol>d1ZDOlxVc2Vyc1xSUEFVc2VyXERvY3VtZW50c1xVaVBhdGhcQm90LU1hbmFnZXItRnJhbWV3b3JrLVNRTGl0ZVxCb3RNYW5hZ2VyXFByb2Nlc3MueGFtbKgBWgOSBA4CAQFiNWI8AgEEZQtlOgIBA2g1aDwCAQJqBZAEEQIBBXMLwgEWAwG2AcUBD4kEGgIBBncNfhYDAd0Bfw3BARgDAbcBxgERiAQeAgEHfEJ8VwMB4AF5Q3lUAwHeAYEBEbUBHAMBvQG9ARW9AcsCAwG4AcYBhAHGAZcBAwG0AcwBF4UEIgIBCIUBE4wBHAMB2AGNAROUARwDAdQBlQETtAEgAwG+Ab0BgwG9AcgCAwG5AdEBGYQEJAIBCYoBQooBsQEDAdsBhwFDhwFdAwHZAZIBQpIBiwEDAdcBjwFDjwFMAwHVAZUBogGVAa0BAwHTAZsBGbEBJAMBvwHTAR34AykCAQ+ABCGABMUCAgEKnwEbnwHGAgMB0QGgARuqATMDAcUBqwEbsAEqAwHAAdYBI9kBLgMBqAHbAVXbAYUBAwGnAd4BK4UCNgMBlAGIAi/rAzoCARCABJABgATCAgIBC58BiQGfAcMCAwHSAaUBWKUBcAMB0AGoAWmoAX4DAc4BpgFkpgF3AwHMAaQBY6QBhQEDAcsBowFmowGLAQMBygGiAWOiAXIDAcgBoAHHAaAB6gEDAccBpwFipwGYAQMBxgGvAU6vAV0DAcMBrQFQrQFhAwHBAdcBJdcB5wEDAa8B2AEl2AH5BQMBqQHgAS/2AToDAZkB/gEzgQI+AwGVAYoCM5EDPwIBPdADM+kDPgIBKpkDN6ADQAIBJagDN8sDQgIBEdcB3QHXAeQBAwGyAdcBtwHXAdEBAwGwAdgBzwHYAe0BAwGtAdgBXdgBdQMBqwHYAfkB2AH2BQMBqgHlATHsAToDAaMB7QEx9AE6AwGfAfUBMfUB9QEDAZoB/wE1/wGgAwMBlwGAAjWAAmwDAZYBjQI5oAJEAwGEAaMCPc0CSAIBZdACQfECTAIBTfQCRYQDUAIBPtIDN90DTwIBLeUDO+UD/AICASueA3KeA30CASibA3ObA4oBAgEmqQM5sANCAgEgsQM5ygM+AgES6gFe6gGCAQMBpgHnAV/nAW8DAaQB8gFc8gGWAQMBogHvAV3vAWcDAaAB9QHmAfUB8gEDAZ0B9QHEAfUB2gEDAZsB/wGkAf8BnQMDAZgBjgI7lQJEAwGQAZYCO50CRAMBjAGeAjueAvgBAwGJAZ8CO58C2wIDAYUBqAI/rwJIAwGAAbACP7cCSAIBfLgCP8ICVwIBcMMCP8wCVwIBZtECQ/ACSAIBTvgCR4IDXwIBQYMDR4MDiAMCAT/bA4oB2wOgAQIBO9UDfNUDiQECATnWA5MB1gOqAQIBN9oDedoDtQECATbUA44B1AOZAQIBNNcDgQHXA5UBAgEy2AOBAdgDlwECATDZA3vZA6ABAgEv0gPkAdIDiQICAS7lA6oB5QP5AgIBLK4DZ64DcgIBI6sDaKsDdQIBIbEDR7EDWwIBE7MDPcgDSAIBFZMCaZMCcgMBkwGQAmqQAncDAZEBmwJ2mwJ/AwGPAZgCd5gCjgEDAY0BngKpAZ4C9QEDAYoBnwLWAZ8CsQIDAYgBnwLCAp8C2AIDAYYBrQJqrQLlAQMBgwGqAmuqAooBAwGBAbUCbrUCrwMCAX+yAm+yAoQBAgF9ugJ8ugKnAQIBe7wCgwG8ApEBAgF5vgKNAb4CogECAXfAAoIBwAK0AQIBdr0ClQG9ArQBAgF0uwKLAbsCwwECAXO4AuwBuAKPAgIBcr8ChgG/ArwBAgFxyQKBAckCjAECAW7KAoIBygK0AQIBbcYCgQHGAo8BAgFrxwKBAccCvQECAWrIAoUByAK5AQIBacMC9wHDApQCAgFoxQKCAcUCugECAWfRAlHRApoBAgFP0wJH6QJSAgFT7AJH7gJSAgFQgAOKAYADvAECAUz9AoUB/QKxAQIBS/sCiQH7ApcBAgFJ/gKGAf4CjgECAUf8AogB/AKTAQIBRf8CiQH/AsUBAgFE+AL6AfgClAICAUP6AooB+gLCAQIBQoMDtQGDA4UDAgFAtQNBvANZAgEYxANFxAOPAwIBFtQCSdwCYQIBW90CSegCTgIBVO0CSe0C8wICAVG5A4MBuQOiAQIBHroDhAG6A7YBAgEduAODAbgDkQECARu1A+4BtQOOAgIBGrcDhAG3A7wBAgEZxAO0AcQDjAMCARfZAo8B2QKuAQIBY9oCjAHaAr4BAgFi2AKLAdgCmQECAWDWApMB1gKnAQIBXtQCgwLUArACAgFd1wKMAdcCxAECAVzdAlfdAowBAgFV3wJN5gJWAgFX7QK3Ae0C8AICAVLkAnnkAn0CAVrhAnrhAowBAgFY</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="336,514">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="352,648" />
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="374,972">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="418,1442" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeserializeJson`1_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExecuteQuery_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="336,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="DeserializeJson`1_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="336,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="404,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="SetTransactionProgress_4" sap:VirtualizedContainerService.HintSize="313.6,22.4" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_16" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="486,459">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="847,607" />
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,353.6</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,264.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,315.5 300,353.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,184.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,235.5 300,264.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,104.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,155.5 300,184.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="664,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">650</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,104.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="668,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="543,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="418,557" />
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="543,705" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="565,929">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="668,998">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="418,752" />
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,384.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,304.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">140,355.5 140,384.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="130,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">235,176.5</av:Point>
            <av:Size x:Key="ShapeSize">130,87</av:Size>
            <x:String x:Key="TrueLabel">Yes</x:String>
            <x:String x:Key="FalseLabel">No</x:String>
            <av:PointCollection x:Key="TrueConnector">235,220 140,220 140,304.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,104.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,155.5 300,176.5 301,176.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,104.5</av:PointCollection>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="618,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="632,1106" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="654,1230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="670,1364" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,204.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,165.5 310,204.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="764,1314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">280,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="Width">750</x:Double>
            <x:Double x:Key="Height">1278.4</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">310,77.5 310,114.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="786,1705">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="826,1785">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>